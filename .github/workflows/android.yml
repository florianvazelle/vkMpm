name: android

on: [push, pull_request]

env:
  # Vulkan version
  UNIX_VULKAN_VERSION: 1.2.148

  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

  # Cache
  PIP_CACHE_DIR: "${{ github.workspace }}/pip-cache"

jobs:
  linux:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-conan-pip-chocolatey-modules
        with:
          path: |
            ${{ env.CONAN_USER_HOME }}
            ${{ env.PIP_CACHE_DIR }}
            ${{ env.CPM_SOURCE_CACHE }}
          key: ubuntu-${{ hashFiles('android/conanfile.txt') }}

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          clang --version

      - name: Install Conan
        run: |
          pip -VV
          pip install --upgrade pip setuptools wheel conan

      - name: Install Ubuntu Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install freeglut3-dev \
            libxi-dev libxinerama-dev libxcursor-dev xorg-dev \
            libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev \
            libxcb-render-util0-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev \
            libxcb-sync-dev libxcb-xfixes0-dev libx11-xcb-dev libxcb-dri3-dev libxcb-util-dev

      - name: Install Vulkan SDK
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-$UNIX_VULKAN_VERSION-focal.list https://packages.lunarg.com/vulkan/$UNIX_VULKAN_VERSION/lunarg-vulkan-$UNIX_VULKAN_VERSION-focal.list
          sudo apt update
          sudo apt install -f vulkan-sdk

      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.2

      - name: Install Android NDK
        run: |
          export ARCH=`uname -m`
          wget http://dl.google.com/android/repository/android-ndk-r15c-linux-${ARCH}.zip
          unzip -u -q android-ndk-r15c-linux-${ARCH}.zip
          pushd android-ndk-r15c
          ndk_version=$(grep ndkVersion $GITHUB_WORKSPACE/android/particle/build.gradle | sed "s/^.*ndkVersion//; s/'//g"|sed 's/"//g;s/[[:space:]]//g')

          if [ ! -z $ndk_version ]
          then
            yes | sdkmanager --channel=3 --install "ndk;$ndk_version"
          fi

          yes | sdkmanager --update
          popd

      - name: Build
        shell: bash
        run: |
          pushd android-ndk-r15c/sources/third_party/shaderc
          ../../../ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk APP_STL:=c++_static APP_ABI=$ANDROID_ABI NDK_TOOLCHAIN_VERSION:=clang libshaderc_combined -j16
          popd
          cmake -Bbuild
          cmake --build build
          cd android
          ./gradlew assembleRelease

      - name: Upload our APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: Release artifact
          path: android/particle/build/outputs/apk/release/*.apk
